(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{385:function(t,s,a){"use strict";a.r(s);var n=a(48),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" js")]),t._v(" "),a("h2",{attrs:{id:"day01"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day01"}},[t._v("#")]),t._v(" day01")]),t._v(" "),a("p",[t._v("(1)")]),t._v(" "),a("p",[t._v("1.区分大小写")]),t._v(" "),a("p",[t._v("2.每行结束的分号可以省略")]),t._v(" "),a("p",[t._v("3.注释//")]),t._v(" "),a("h2",{attrs:{id:"day02"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day02"}},[t._v("#")]),t._v(" day02")]),t._v(" "),a("p",[t._v("内存—>二进制到cpu中运算—>十进制")]),t._v(" "),a("h3",{attrs:{id:"常量-const-用于存储数据的容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量-const-用于存储数据的容器"}},[t._v("#")]),t._v(" 常量（const)：用于存储数据的容器")]),t._v(" "),a("p",[t._v("常量一旦声明必须赋值，不允许重新赋值(连接数据库设置的端口，账号，密码....信息)")]),t._v(" "),a("p",[t._v("eg:声明常量分别保存数据库服务器的IP地址，端口，用户名，密码")]),t._v(" "),a("p",[t._v("const IP = '127.0.0.1';")]),t._v(" "),a("p",[t._v("const port = 3306;")]),t._v(" "),a("p",[t._v("const user = 'root';")]),t._v(" "),a("p",[t._v("const password = ' ';")]),t._v(" "),a("h3",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("h4",{attrs:{id:"_1-原始类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原始类型"}},[t._v("#")]),t._v(" 1.原始类型")]),t._v(" "),a("p",[t._v("数值型：（number）  二进制 0 2 4 8 ....")]),t._v(" "),a("p",[t._v("​    八进制-以0开头")]),t._v(" "),a("p",[t._v("​      十六进制-以0x开头的数字(不区分大小写）：0xa=10     1 2 3 .....a ...f ...10")]),t._v(" "),a("p",[t._v("​      浮点型：3.1415e+2")]),t._v(" "),a("p",[t._v("typeof:检测数据类型")]),t._v(" "),a("p",[t._v("字符串型：（string）   被引号包含的数据就是字符串型，不区分单双引号")]),t._v(" "),a("p",[t._v("​    查看任意一个字符的Unicode码")]),t._v(" "),a("p",[t._v("​    's'.charCodeAt();")]),t._v(" "),a("p",[t._v("​    eg://查看一个字符的编码值")]),t._v(" "),a("p",[t._v("​    console.log('s',charCodeAt());")]),t._v(" "),a("p",[t._v("布尔型:(boolean)    里面只有两个值 true/false，代表真和假，表示只有两个结果的数据，例如是否登录/注册....")]),t._v(" "),a("p",[t._v("未定义型：只有一个值undefined   声明了变量未赋值则为undefined")]),t._v(" "),a("p",[t._v("空：只有一个值NULL")]),t._v(" "),a("p",[t._v("​     类型是object（对象），常结合引用类型数据使用")]),t._v(" "),a("h4",{attrs:{id:"_2-引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-引用类型"}},[t._v("#")]),t._v(" 2.引用类型")]),t._v(" "),a("h4",{attrs:{id:"_3-数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据类型转换"}},[t._v("#")]),t._v(" 3.数据类型转换")]),t._v(" "),a("h5",{attrs:{id:"隐式转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),a("p",[t._v("（1）数字+字符串 ：数字转为字符串 拼接在一起      2+'1'='21'")]),t._v(" "),a("p",[t._v("（2）数字+布尔型：布尔型转为数值，true/false为1/0 再相加")]),t._v(" "),a("p",[t._v("（3）字符串+布尔值：布尔值转为字符串 拼接在一起   'abc'+true='abctrue'")]),t._v(" "),a("p",[t._v("练习：查看以下程序的运行结果：")]),t._v(" "),a("p",[t._v("var a=2, b=true,c='tedu';")]),t._v(" "),a("p",[t._v("console.log(a+b+c);//'3tedu'")]),t._v(" "),a("p",[t._v("console.log(b+c+a);//'truetedu2'")]),t._v(" "),a("p",[t._v("console.log(c+a+b);//'tedu2true'")]),t._v(" "),a("p",[t._v("“"),a("strong",[t._v("`")]),t._v("”:反引号   增强型字符串  定义多行字符串，或者在字符串中嵌入变量。")]),t._v(" "),a("p",[t._v("加号（+）的作用：")]),t._v(" "),a("p",[t._v("（1）加法运算")]),t._v(" "),a("p",[t._v("（2）字符串之间的拼接")]),t._v(" "),a("p",[t._v("（后端—>js(通过Ajax从后端得到数据)—>前端网页（拼接数据））")]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("p",[t._v("var title = 'iphone';")]),t._v(" "),a("p",[t._v("var price = 4999;")]),t._v(" "),a("p",[t._v("console.log('标题:   '+title+'    价格:  '  +price);")]),t._v(" "),a("p",[t._v("//练习：价格从后端获取到了一个用户名和手机号码，最后打印")]),t._v(" "),a("p",[t._v("var userName = 'tao';")]),t._v(" "),a("p",[t._v("var phone = '123456789';")]),t._v(" "),a("p",[t._v("console.log('欢迎：'+userName+‘  您当前绑定的手机号码'+phone);")]),t._v(" "),a("p",[t._v("NaN：Not a Number,不是一个数字，是在数据转数值的时候失败的结果，和任何的值执行数学运算结果还是NaN")]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("p",[t._v("var a1 = 2+undefined;//NaN  Not a Number 不是一个数字")]),t._v(" "),a("p",[t._v("var a2 = '4' * 2;//8")]),t._v(" "),a("p",[t._v("var a3 = true - '5';//-4")]),t._v(" "),a("p",[t._v("var a4 = undefined - '2';//NaN")]),t._v(" "),a("p",[t._v("隐私转换为数值自动的调用的函数Number（）")]),t._v(" "),a("h5",{attrs:{id:"强制转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制转换"}},[t._v("#")]),t._v(" 强制转换")]),t._v(" "),a("p",[t._v("1.强制转为数值")]),t._v(" "),a("p",[t._v("var n1=Number(true);//1")]),t._v(" "),a("p",[t._v("Number('false');//0")]),t._v(" "),a("p",[t._v("练习：转以下数据为字符串")]),t._v(" "),a("p",[t._v("’2‘  ’2a' undefined null")]),t._v(" "),a("p",[t._v("Number('2');//2")]),t._v(" "),a("p",[t._v("Number('2a');//NaN")]),t._v(" "),a("p",[t._v("Number('undefined');//NaN")]),t._v(" "),a("p",[t._v("Number('null');//0")]),t._v(" "),a("p",[t._v("2.强制转化为整型")]),t._v(" "),a("p",[t._v("parseInt():通常用于将小数和字符串转为整型，其他转化为NaN")]),t._v(" "),a("p",[t._v("常用于分页")]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("p",[t._v("var p1 = parseInt(8.3);//8")]),t._v(" "),a("p",[t._v("var p2 = parseInt('6.18a');//6")]),t._v(" "),a("p",[t._v("var p3 = parseInt('3.3');//3")]),t._v(" "),a("p",[t._v("var p4 = parseInt('a6.18');//NaN")]),t._v(" "),a("p",[t._v("3.强制转化为浮点型")]),t._v(" "),a("p",[t._v("parseFloat():通常用于将字符串转为浮点型，其他的转换为NaN")]),t._v(" "),a("p",[t._v("练习：'5.18'  '7a'  'a4.13'")]),t._v(" "),a("p",[t._v("var p1 = parseFloat('5.18');//5.18")]),t._v(" "),a("p",[t._v("var p2 = parseFloat('a4.13');//NaN")]),t._v(" "),a("p",[t._v("var p3 = parseFloat('7a');//7")]),t._v(" "),a("p",[t._v("4.将数值和布尔值强制转为字符串（对象）")]),t._v(" "),a("p",[t._v("toString()")]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("p",[t._v("var num = 2;")]),t._v(" "),a("p",[t._v("//产生一个新的字符串数据")]),t._v(" "),a("p",[t._v("var str = num.toString();//'2'")]),t._v(" "),a("h4",{attrs:{id:"_4-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-运算符"}},[t._v("#")]),t._v(" 4.运算符")]),t._v(" "),a("p",[t._v("表达式：由数据或者由运算符连接的操作数据组成的形式称作表达式")]),t._v(" "),a("p",[t._v("运算符分为算术运算符、比较运算符、逻辑运算符、位运算符、赋值运算符、三目运算符")]),t._v(" "),a("h4",{attrs:{id:"_1-算术运算符-都会将数据隐式转换为数值型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-算术运算符-都会将数据隐式转换为数值型"}},[t._v("#")]),t._v(" （1）算术运算符（都会将数据隐式转换为数值型）")]),t._v(" "),a("p",[t._v("+-*/ %(取余) ++（自增）   -- （自减）")]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("p",[t._v("取余：隔行换色（与2取余  找奇数偶数）    找闰年（与4取余）")]),t._v(" "),a("p",[t._v("console.log(5%2);//1\nconsole.log(2%5);//2")]),t._v(" "),a("p",[t._v("自增自减：")]),t._v(" "),a("p",[t._v("var b = 2;//3")]),t._v(" "),a("p",[t._v("var c = b++; //2")]),t._v(" "),a("p",[t._v("//先把b赋给c,然后把自增后的结果赋给c")]),t._v(" "),a("p",[t._v("var d = 2;//3")]),t._v(" "),a("p",[t._v("var e = ++d;//3")]),t._v(" "),a("p",[t._v("//先让d自增，然后把自增后的结果赋给e")]),t._v(" "),a("p",[t._v("练习：\nvar n1 = 5;")]),t._v(" "),a("p",[t._v("var n2 = n1--;")]),t._v(" "),a("p",[t._v("var n3 = --n1;")]),t._v(" "),a("p",[t._v("console.log(n1,n2,n3);//3,5,3")]),t._v(" "),a("p",[t._v("//正负号也具有隐式转换")]),t._v(" "),a("p",[t._v("console.log(5 + - '1');//5+(-1) = 4")]),t._v(" "),a("p",[t._v("//+ '3' ->3")]),t._v(" "),a("h4",{attrs:{id:"_2-比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-比较运算符"}},[t._v("#")]),t._v(" （2）比较运算符")]),t._v(" "),a("p",[t._v("<     >      >=     <=    ==(等于)      ！=（不等于）     ===（全等于）    ！==（不全等于）")]),t._v(" "),a("p",[t._v("==(等于) ：只是比较值是否相同，可能会发生隐式转换")]),t._v(" "),a("p",[t._v("===   全等于 ：先比较类型，然后比较值")]),t._v(" "),a("p",[t._v("!== 不全等于：类型不同或者值不同")]),t._v(" "),a("p",[t._v("!= 不等于：比较值不等于")]),t._v(" "),a("p",[t._v("NaN和任何值比较（>  <  >=  <=  ==  ===)结果都是false")]),t._v(" "),a("p",[t._v("eg")]),t._v(" "),a("p",[t._v("console.log(2 == '2');//true\nconsole.log(2 === '2');//false")]),t._v(" "),a("p",[t._v("console.log(1 == true);//true\nconsole.log(1 === true);//false")]),t._v(" "),a("p",[t._v("console.log(null == undefined);//true\nconsole.log(null === undefined);//false")]),t._v(" "),a("p",[t._v("// 比较的首个字母的Unicode码")]),t._v(" "),a("p",[t._v("console.log('3'."),a("strong",[t._v("charCodeAt()")]),t._v(",'1'."),a("strong",[t._v("charCodeAt()")]),t._v(");//'3'->51    '1'->49")]),t._v(" "),a("p",[t._v("console.log('3'>'20');//true     比较的是首个字符的Unicode代码")]),t._v(" "),a("p",[t._v("console.log(3>'10');//false    字符串转为数值")]),t._v(" "),a("p",[t._v("3>'10a'//false")]),t._v(" "),a("p",[t._v("3<'10a'//false")]),t._v(" "),a("p",[t._v("3=='10a'//false")]),t._v(" "),a("p",[t._v("NaN==NaN//false")]),t._v(" "),a("h4",{attrs:{id:"_3-逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-逻辑运算符"}},[t._v("#")]),t._v(" （3）逻辑运算符")]),t._v(" "),a("p",[t._v("&&   ||    !")]),t._v(" "),a("p",[t._v("&&  逻辑与：关联的两个条件都是true结果是true，否则是false       （登陆）")]),t._v(" "),a("p",[t._v("|| 逻辑或：关联的两个条件有一个是true结果是true，否则是false      （登陆）")]),t._v(" "),a("p",[t._v("！ 取反")]),t._v(" "),a("p",[t._v("短路逻辑：当执行完第一个条件就"),a("strong",[t._v("不再执行")]),t._v("第二个条件，关注点在于第二个条件（表达式）是否执行")]),t._v(" "),a("p",[t._v("&&  当第一个条件为false就不再执行第二个条件")]),t._v(" "),a("p",[t._v("||    当第一个条件为true就不再执行第二个条件")]),t._v(" "),a("p",[t._v("练习：查看以下程序是否会报错")]),t._v(" "),a("p",[t._v("var  a = 5;")]),t._v(" "),a("p",[t._v("a > 10 && console.log(num);//不报错")]),t._v(" "),a("p",[t._v("a > 2 || console.log(num);//不报错")]),t._v(" "),a("h4",{attrs:{id:"_4-位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-位运算符"}},[t._v("#")]),t._v(" （4）位运算符")]),t._v(" "),a("p",[t._v("模拟计算机底层的计算，先将数据转为二进制，然后进行运算，当运算完再把结果转回成十进制。（满二进一）")]),t._v(" "),a("p",[t._v("1   2   3     4         5        6         7")]),t._v(" "),a("p",[t._v("1  10 11  100    101    110     111")]),t._v(" "),a("p",[t._v("& 按位与,上下两位比较，如果都是1结果都是1，否则是0")]),t._v(" "),a("p",[t._v("5&7 -> 101   111   ->     101   -> 5")]),t._v(" "),a("p",[t._v("|按位或，上下两位比较，如果含有1结果是1，否则是0")]),t._v(" "),a("p",[t._v("^按位异或，上下两位比较，不同是1，相同是0")]),t._v(" "),a("p",[t._v("8|13- > 1000   1101  -> 1101")]),t._v(" "),a("p",[t._v("7^12 -> 111  1100  -> 1011")]),t._v(" "),a("p",[t._v("按位右移 <<:每右移一位，在原来的基础之上除以2再取整")]),t._v(" "),a("p",[t._v("按位左移 >>:每左移一位，在原来的基础之上乘以2")]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("p",[t._v("32>>1   0010 0000->0100 0000")]),t._v(" "),a("p",[t._v("32<<1   0010 0000->0001 0000")]),t._v(" "),a("h4",{attrs:{id:"_5-赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-赋值运算符"}},[t._v("#")]),t._v(" （5）赋值运算符")]),t._v(" "),a("p",[t._v("=  +=  -=  *=  /=  %=  .....")]),t._v(" "),a("p",[t._v("赋值   运算赋值：先执行运算，再执行赋值")]),t._v(" "),a("p",[t._v("练习：声明变量保存商品的价格，让该商品再原来的基础之上打九折，最后打印价格。")]),t._v(" "),a("p",[t._v("var price = 3;\nprice *= 0.9;\nconsole.log(price);")]),t._v(" "),a("h4",{attrs:{id:"_6-三目数据符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-三目数据符"}},[t._v("#")]),t._v(" （6）三目数据符")]),t._v(" "),a("p",[t._v("一目运算符：由一个运算符连接的一个操作数据或者表达式  ++  --  ！")]),t._v(" "),a("p",[t._v("二目运算符：由一个运算符连接的两个操作数据或者表达式")]),t._v(" "),a("p",[t._v("三目运算符：由两个运算符连接的三个操作数据或者表达式")]),t._v(" "),a("h5",{attrs:{id:"_1-条件表达式-表达式-1-表达式2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-条件表达式-表达式-1-表达式2"}},[t._v("#")]),t._v(" 1.条件表达式  ？ 表达式  1  ： 表达式2")]),t._v(" "),a("p",[t._v("如果条件表达式为true执行表达式一")]),t._v(" "),a("p",[t._v("如果条件表达式为false执行表达式二")]),t._v(" "),a("h5",{attrs:{id:"_2-浏览器端函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器端函数"}},[t._v("#")]),t._v(" 2.浏览器端函数")]),t._v(" "),a("p",[t._v("alert():弹出警示框")]),t._v(" "),a("p",[t._v("prompt（）：弹出输入框（提示框），需要使用变量保存用户输入的值，类型是字符串型，如果直接点击取消返回NULL，如果声明也没输入点击确定得到的是空字符串（“）")]),t._v(" "),a("p",[t._v("程序 = 数据 + 算法")]),t._v(" "),a("p",[t._v("程序的执行方式：顺序执行、选择执行、循环执行")]),t._v(" "),a("h5",{attrs:{id:"_3-流程控制-选择执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-流程控制-选择执行"}},[t._v("#")]),t._v(" 3.流程控制（选择执行）")]),t._v(" "),a("h6",{attrs:{id:"_1-if语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-if语句"}},[t._v("#")]),t._v(" （1）if语句")]),t._v(" "),a("p",[t._v("if（条件表达式）{")]),t._v(" "),a("p",[t._v("​ 语句块")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("如果if后的语句块中只有一行代码可以省略，则大括号可以省略")]),t._v(" "),a("p",[t._v("以下数据作为条件表达式会隐式转换为false")]),t._v(" "),a("p",[t._v("0           ’  ‘           undefined          null         NaN")]),t._v(" "),a("p",[t._v("练习：声明变量保存用户的签名内容，如果签名内容为空设置默认内容为’这家伙很懒，什么也没留下‘，最后打印签名内容。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是空字符串，执行语句块中代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//str === ' '")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这家伙很懒，什么也没留下'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" userName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined     如果用户名为空就打印‘游客’否则打印用户名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" userName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'游客'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//游客")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(a);")]),t._v("\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果没有执行第二个表达式，就把第一个表达式赋给a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果执行到了第二个表达式，就表第二个表达式赋给a")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n")])])]),a("h6",{attrs:{id:"_2-if-else语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-if-else语句"}},[t._v("#")]),t._v(" （2）if-else语句")]),t._v(" "),a("p",[t._v("if（条件表达式）{")]),t._v(" "),a("p",[t._v("​ 语句块1")]),t._v(" "),a("p",[t._v("}else{")]),t._v(" "),a("p",[t._v("​ 语句块2")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明变量保存读取的性别的值（1/0），如果是1打印‘男’，否则是0打印‘女’")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分别使用if-else和三目运算符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h6",{attrs:{id:"_3-if-else嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-if-else嵌套"}},[t._v("#")]),t._v(" （3）if-else嵌套")]),t._v(" "),a("p",[t._v("if（条件表达式1）{")]),t._v(" "),a("p",[t._v("​ 语句块1")]),t._v(" "),a("p",[t._v("}else if（条件表达式n){")]),t._v(" "),a("p",[t._v("​ 语句块n")]),t._v(" "),a("p",[t._v("}else{")]),t._v(" "),a("p",[t._v("​ 语句块n+1   //以上所有的条件表达式")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("h6",{attrs:{id:"_4-switch-case-特殊的多项分支语句-根据表达式的值选择执行对应的语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-switch-case-特殊的多项分支语句-根据表达式的值选择执行对应的语句"}},[t._v("#")]),t._v(" （4）switch-case：特殊的多项分支语句，根据表达式的值选择执行对应的语句")]),t._v(" "),a("p",[t._v("switch（表达式）{")]),t._v(" "),a("p",[t._v("​ case 值1：")]),t._v(" "),a("p",[t._v("​  语句块1")]),t._v(" "),a("p",[t._v("​  break；")]),t._v(" "),a("p",[t._v("​ case 值n:")]),t._v(" "),a("p",[t._v("​  语句块n")]),t._v(" "),a("p",[t._v("​  break;")]),t._v(" "),a("p",[t._v("​ default：")]),t._v(" "),a("p",[t._v("​ 语句块n+1;  //表达式和case后的值都不同")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("对比if-else嵌套和switch-case的区别")]),t._v(" "),a("p",[t._v("相同：两者都可以用于多项判断")]),t._v(" "),a("p",[t._v("不同：if-else既可以进行等于，也可以进行不等于的比较；switch-case只能进行全等于的比较；if-else的适用范围更加广泛，switch-case结构上更为清晰，执行效率更高。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'非法成绩'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'优秀'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'良好'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'合格'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'及格'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'不及格'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"day04"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day04"}},[t._v("#")]),t._v(" day04")]),t._v(" "),a("h3",{attrs:{id:"_1-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-循环"}},[t._v("#")]),t._v(" 1.循环")]),t._v(" "),a("p",[t._v("循环是一遍又一遍执行相同或者相似的代码")]),t._v(" "),a("p",[t._v("循环的两个要素")]),t._v(" "),a("p",[t._v("​ 循环条件：控制循环是否要继续进行")]),t._v(" "),a("p",[t._v("​ 循环体：要执行的相同相似的代码")]),t._v(" "),a("h3",{attrs:{id:"_1-while循环-循环条件为true执行循环体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-while循环-循环条件为true执行循环体"}},[t._v("#")]),t._v(" （1）while循环（循环条件为true执行循环体）")]),t._v(" "),a("p",[t._v("while（循环条件）{")]),t._v(" "),a("p",[t._v("​ 循环体")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("CTRL+c：强制结束")]),t._v(" "),a("p",[t._v("cls：清屏")]),t._v(" "),a("p",[t._v("（2）break")]),t._v(" "),a("p",[t._v("在循环体中使用，用于强制结束循环")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印1~100之间所有的整数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环体")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当i为100的时候，强制结束")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//增量")]),t._v("\n    j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-do-while循环-先执行一遍循环体再判断循环条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-do-while循环-先执行一遍循环体再判断循环条件"}},[t._v("#")]),t._v(" （2）do-while循环（先执行一遍循环体再判断循环条件）")]),t._v(" "),a("p",[t._v("do{")]),t._v(" "),a("p",[t._v("​ 循环体")]),t._v(" "),a("p",[t._v("}while(循环条件)；")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("练习：声明变量记录银行卡的密码‘123456’，循环弹出提示框，要求用户输入密码，如果密码输入正确，则警示框弹出‘login success’并强制结束循环；如果次数达到了3次，警示框弹出‘more than three’，\n并强制结束循环\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取用户输入的密码")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prompt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入密码：'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果密码输入正确")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" pwd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'login success'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每输入一次记录一次")]),t._v("\n        count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果次数为3，吞卡")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'more than three'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-for-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-for-循环"}},[t._v("#")]),t._v(" （3）for 循环")]),t._v(" "),a("p",[t._v("for(初始值；循环条件；增量){")]),t._v(" "),a("p",[t._v("​ 循环体")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//多个循环条件，后面的会把前面的覆盖")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每次循环产生的数字i，拼接到str")]),t._v("\n    str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("break与continue")]),t._v(" "),a("p",[t._v("continue：跳过剩余循环体，后续还会执行其他的代码")]),t._v(" "),a("p",[t._v("break：强制结束循环，后续不会执行其他的代码")]),t._v(" "),a("h3",{attrs:{id:"_4-循环嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-循环嵌套"}},[t._v("#")]),t._v(" （4）循环嵌套")]),t._v(" "),a("p",[t._v("在任意一个循环体中包含了其他的循环。")]),t._v(" "),a("p",[t._v("任意两个循环都可以相互嵌套")]),t._v(" "),a("h2",{attrs:{id:"day05"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day05"}},[t._v("#")]),t._v(" day05")]),t._v(" "),a("h3",{attrs:{id:"_1-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-函数"}},[t._v("#")]),t._v(" 1.函数")]),t._v(" "),a("p",[t._v("NUmber())/parseInt()/parseFlaot()/alert()/prompt)().....")]),t._v(" "),a("p",[t._v("函数分为系统函数和自定义函数")]),t._v(" "),a("p",[t._v("函数：是一个功能体，需要提供若干个数据，返回处理的结果；用于封装重复执行的代码")]),t._v(" "),a("h4",{attrs:{id:"_1-创建普通函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建普通函数"}},[t._v("#")]),t._v(" （1）创建普通函数")]),t._v(" "),a("p",[t._v("function函数名称（）{")]),t._v(" "),a("p",[t._v("​ 函数体—要封装的重复执行的代码")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("h4",{attrs:{id:"_2-函数的调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数的调用"}},[t._v("#")]),t._v(" （2）函数的调用")]),t._v(" "),a("p",[t._v("函数名称（）； //执行函数体中封装的代码")]),t._v(" "),a("p",[t._v("练习：创建一个函数getSum,在函数体中封装计算1~100之间所有整数的和并打印结果；调用多次")]),t._v(" "),a("h4",{attrs:{id:"_3-创建带有参数的函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建带有参数的函数"}},[t._v("#")]),t._v(" （3）创建带有参数的函数")]),t._v(" "),a("p",[t._v("function 函数名称（参数列表）{")]),t._v(" "),a("p",[t._v("​ 函数体")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("调用:")]),t._v(" "),a("p",[t._v("​ 函数名称（参数列表）")]),t._v(" "),a("p",[t._v("​    创建函数时的参数称作形参，调用函数时的参数称作实参，实参会赋值给形参，实参数量可以和形参的数量不匹配，如果形参未被赋值则为undefined。")]),t._v(" "),a("h4",{attrs:{id:"_4-创建带有返回值的函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-创建带有返回值的函数"}},[t._v("#")]),t._v(" (4)创建带有返回值的函数")]),t._v(" "),a("p",[t._v("function 函数名称(参数列表){")]),t._v(" "),a("p",[t._v("​ 函数体")]),t._v(" "),a("p",[t._v("​ return 值;//返回值，返回函数调用后的结果")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("调用：\n函数名称（参数列表）")]),t._v(" "),a("p",[t._v("​ return用于返回函数调用后的结果，如果函数中没有return或者return后不加任何值则返回undefined，一旦return执行就会跳出函数，结束函数的执行。")]),t._v(" "),a("p",[t._v("对比break和return")]),t._v(" "),a("p",[t._v("break用于循环和switch-case语句中，用于跳出所在的这组语句")]),t._v(" "),a("p",[t._v("return用于函数中，跳出函数，结束函数的调用")]),t._v(" "),a("h3",{attrs:{id:"_2-变量的作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-变量的作用域"}},[t._v("#")]),t._v(" 2.变量的作用域")]),t._v(" "),a("p",[t._v("全局变量：在"),a("strong",[t._v("全局作用域")]),t._v("下声明的变量，可以在"),a("strong",[t._v("任意的作用域")]),t._v("下访问到")]),t._v(" "),a("p",[t._v("局部变量：在"),a("strong",[t._v("函数作用域")]),t._v("下声明的变量，只能在"),a("strong",[t._v("当前的作用域")]),t._v("下访问到")]),t._v(" "),a("p",[t._v("在函数内不加var声明的是全局变量，不推荐，后期在严格模式下会报错。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("在程序执行前,会将var声明的变量提升到所在作用域的最前边\n只是提升声明,不提升赋值\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//形参n属于局部变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错,无法访问局部n")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-函数的作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-函数的作用域"}},[t._v("#")]),t._v(" 3.函数的作用域")]),t._v(" "),a("p",[t._v("全局函数：在全局作用域下调用的函数，可以在任意作用域下调用\n局部函数：在函数作用域下创建的函数，只能在当前作用域下调用")]),t._v(" "),a("p",[t._v("斐波那契数列")]),t._v(" "),a("p",[t._v("第一次先从求第三项的值开始")]),t._v(" "),a("p",[t._v("直到达到所求项的值")]),t._v(" "),a("p",[t._v("让n1和n2保存第一项和第二项的值，每求出一项把结果保存到n2，为了继续往后求下一项，还需要让n1挪动最后的n2就是所求项的值")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fib")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果要求第n项的值，需要从求出第三项的值开始，直到第N项")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每一项值的求法：")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n2的值是上一次n1和n2相加的和")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n1的值是上一次n2的值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n2代表求出的每一项的值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        n2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印每一项的值")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回n2最后的结果，就是所求项的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"day06"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day06"}},[t._v("#")]),t._v(" day06")]),t._v(" "),a("h3",{attrs:{id:"_1-函数提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-函数提升"}},[t._v("#")]),t._v(" 1.函数提升")]),t._v(" "),a("p",[t._v("函数执行前会将函数提升到所在作用域的最前边")]),t._v(" "),a("h3",{attrs:{id:"_2-递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-递归"}},[t._v("#")]),t._v(" 2.递归")]),t._v(" "),a("p",[t._v("在一个函数的内部调用了自身的函数（不能确定要多少次时，对象的拷贝）")]),t._v(" "),a("p",[t._v("如何使用递归：\n1.要有边界条件")]),t._v(" "),a("p",[t._v("2.找规律，结合return，最终跳出函数")]),t._v(" "),a("p",[t._v("eg：利用递归任意数字~1之间所有整数的乘积")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//边界条件：当n=1时,返回1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//规律：n~1之间所有整数的乘积 = n * n-1的乘积")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-匿名函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-匿名函数"}},[t._v("#")]),t._v(" 3.匿名函数")]),t._v(" "),a("p",[t._v("function(){    }")]),t._v(" "),a("p",[t._v("作用：")]),t._v(" "),a("p",[t._v("（1）创建函数")]),t._v(" "),a("p",[t._v("函数声明")]),t._v(" "),a("p",[t._v("func fn(){}")]),t._v(" "),a("p",[t._v("函数表达式")]),t._v(" "),a("p",[t._v("变量名称就是函数名称")]),t._v(" "),a("p",[t._v("var fun = function(){")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("对比函数名称（）和函数名称")]),t._v(" "),a("p",[t._v("函数名称（），调用函数，得到函数的返回结果")]),t._v(" "),a("p",[t._v("函数名称，本质上就是一个变量，保存了一个函数。")]),t._v(" "),a("p",[t._v("练习：使用函数表达式创建任意两个数字，返回两个数字之阿金所有整数的和")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数提升  undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(getSum(1,2));//报错，不存在函数提升")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getSum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环n1~n2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("对比声明函数声明和函数表达式创建函数的区别")]),t._v(" "),a("p",[t._v("函数声明创建的函数存在函数的提升，顺序上可以先写调用再写创建")]),t._v(" "),a("p",[t._v("函数表达式创建的函数只是变量声明的提升，必须先写创建")]),t._v(" "),a("p",[t._v("（2）匿名函数自调用（交互效果）")]),t._v(" "),a("p",[t._v("全局污染：全局变量的出现产生的影响")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//形参")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数作用域下，变量都是局部变量，可以防止污染全局")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//后面（）为调用，为实参")]),t._v("\n")])])]),a("p",[t._v("（3）回调函数")]),t._v(" "),a("p",[t._v("将函数以实参的形式传递，这个传递的函数称为回调函数")]),t._v(" "),a("p",[t._v("function tao(madai){")]),t._v(" "),a("p",[t._v("​ madai()//调用传递进来的回调函数")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("function dong(){}")]),t._v(" "),a("p",[t._v("​ tao(dong);")]),t._v(" "),a("p",[t._v("​ tao(function(){})")]),t._v(" "),a("h3",{attrs:{id:"_4-系统函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-系统函数"}},[t._v("#")]),t._v(" 4.系统函数")]),t._v(" "),a("p",[t._v("isNaN():检测一个数是否为NaN，常用于检测用户输入值是否含有非数字会将检测的值隐私转换为数值，然后查看是否为NaN，是->true   不是->false")]),t._v(" "),a("p",[t._v("isFinite():检测一个值是否为有限值，只有infinity是无穷，其他所有的值都是有限值，如果是有限值返回true，不是有限值返回false")]),t._v(" "),a("p",[t._v("eval()：执行字符串表达式")]),t._v(" "),a("p",[t._v("‘1+2’")]),t._v(" "),a("h3",{attrs:{id:"_5-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-对象"}},[t._v("#")]),t._v(" 5.对象")]),t._v(" "),a("p",[t._v("属于引用类型数据")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("对象是一组属性和方法的集合")])])]),t._v(" "),a("p",[t._v("一部手机， 属性有品牌、颜色、型号、尺寸......  方法有玩游戏、看视频、办公...")]),t._v(" "),a("p",[t._v("万物皆对象")]),t._v(" "),a("h4",{attrs:{id:"_1-分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-分类"}},[t._v("#")]),t._v(" （1）分类")]),t._v(" "),a("p",[t._v("自定义对象，用户自己创建的对象")]),t._v(" "),a("p",[t._v("内置对象（ES对象），JS提供的对象（标准规范后的对象）")]),t._v(" "),a("p",[t._v("宿主对象：根据不同的执行环境划分")]),t._v(" "),a("h5",{attrs:{id:"_1-自定义对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-自定义对象"}},[t._v("#")]),t._v(" 1）自定义对象")]),t._v(" "),a("p",[t._v("对象字面量：")]),t._v(" "),a("p",[t._v("{属性名：属性值，属性名：属性值...}")]),t._v(" "),a("p",[t._v("属性名中的引号可以省略，如果含有特殊字符必须加引号")]),t._v(" "),a("p",[t._v("访问属性")]),t._v(" "),a("p",[t._v("对象.属性名")]),t._v(" "),a("p",[t._v("对象['属性名']")]),t._v(" "),a("p",[t._v("如果属性名不存在则返回undefined")]),t._v(" "),a("p",[t._v("内置构造函数")]),t._v(" "),a("p",[t._v("new Object()")]),t._v(" "),a("p",[t._v("创建一个空对象，需要单独添加每个属性")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内置构造函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" emp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需要单独添加属性")]),t._v("\nemp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nemp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tao'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nemp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'man'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("遍历属性")]),t._v(" "),a("p",[t._v("依次访问对象中的每个属性")]),t._v(" "),a("p",[t._v("for (var k in 对象){")]),t._v(" "),a("p",[t._v("​ k 代表属性名")]),t._v(" "),a("p",[t._v("​ 对象[k] 属性名对应的属性值")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("自定义构造函数")]),t._v(" "),a("p",[t._v("{")]),t._v(" "),a("p",[t._v("name:'tao',")]),t._v(" "),a("p",[t._v("play:function(){")]),t._v(" "),a("p",[t._v("​ this 代表调用方法的对象")]),t._v(" "),a("p",[t._v("}}")]),t._v(" "),a("p",[t._v("遍历数组")]),t._v(" "),a("p",[t._v("for（ var k in 数组){")]),t._v(" "),a("p",[t._v("​ k 下标")]),t._v(" "),a("p",[t._v("​ 数组[k]  下标对应的元素")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("for(var i = 0;i<数组.length;i++){")]),t._v(" "),a("p",[t._v("​ i 下标")]),t._v(" "),a("p",[t._v("​ 数组[i]  下标对应的元素")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("h2",{attrs:{id:"day07"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day07"}},[t._v("#")]),t._v(" day07")]),t._v(" "),a("p",[t._v("​ 如何学习API：API的作用、有哪些参数、哪些参数可选，哪些参数必选、返回结果是什么")]),t._v(" "),a("p",[t._v("​ concat(arr2,arr3.....)  拼接多个数组，arr2,arr3表示要拼接的数组，返回拼接后的数组")]),t._v(" "),a("h3",{attrs:{id:"_1-数组api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数组api"}},[t._v("#")]),t._v(" 1.数组API")]),t._v(" "),a("p",[t._v("**reverse（）**翻转数组中的元素")]),t._v(" "),a("p",[a("strong",[t._v("sort（）")]),t._v("　　对数组进行排序，默认按照编码排序")]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("p",[t._v("sort（function（a,b）{")]),t._v(" "),a("p",[t._v("​ return a-b;//按照数字从小到大排序")]),t._v(" "),a("p",[t._v("​ return b-a;//按照数字从大到小排序")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("concat(arr2,arr3.....)")]),t._v("  拼接多个数组，arr2,arr3表示要拼接的数组，返回拼接后的数组")]),t._v(" "),a("p",[a("strong",[t._v("slice(start,end)")]),t._v(" 截取数组的元素，start开始的下标，end结束的下标，不包含end本身；如果下标是负数表示倒数，返回截取的元素，格式为数组。")]),t._v(" "),a("p",[t._v("练习：创建一个数组包含a~f,每个字母是一个元素；分别截取bc,ef;最后再将这两组拼接成一个新数组。")]),t._v(" "),a("p",[t._v("**spilce(start,count,v1,v2.....)**删除数组中的元素，start开始的下标，count删除的数量，count为空删除的最后，下标是负数表示倒数；v1,v2..表示删除后补充的元素，返回删除的元素，原数组会发生变化")]),t._v(" "),a("p",[t._v("练习：创建数组包含a~h，删除cd,替换f为m,在下标为1的位置插入z")]),t._v(" "),a("p",[a("strong",[t._v("indexOf()")]),t._v("  查找数组中是否含有某个元素，返回找到的第一个的下标，如果找不到返回-1")]),t._v(" "),a("p",[a("strong",[t._v("push()")]),t._v("  往数组的末尾添加元素，返回数组的长度")]),t._v(" "),a("p",[a("strong",[t._v("pop()")]),t._v("    删除数组末尾的一个元素，返回删除的元素")]),t._v(" "),a("p",[a("strong",[t._v("unshift()")]),t._v(" 往数组的开头添加元素，返回数组的长度")]),t._v(" "),a("p",[a("strong",[t._v("shift()")]),t._v("    删除数组开头的一个元素，返回删除的元素")]),t._v(" "),a("h3",{attrs:{id:"_2-二维数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-二维数组"}},[t._v("#")]),t._v(" 2.二维数组")]),t._v(" "),a("p",[t._v("用于对数据进行二次分类")]),t._v(" "),a("p",[t._v("[ [元素1，元素2....]，[],[]......]")]),t._v(" "),a("p",[t._v("访问")]),t._v(" "),a("p",[t._v("​     数组 [下标] [下标]")]),t._v(" "),a("h3",{attrs:{id:"_3-字符串对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串对象"}},[t._v("#")]),t._v(" 3.字符串对象")]),t._v(" "),a("p",[t._v("对象：应用类型的数据")]),t._v(" "),a("p",[t._v("原始类型的数据不叫对象")]),t._v(" "),a("p",[t._v("包装对象：目的是为了让原始类型的数据像引用类型数据，具有属性和方法，一共有三种包装对象，String，Number，Boolean")]),t._v(" "),a("p",[t._v("​ var str1 = '1';//（字符串）字面量")]),t._v(" "),a("p",[t._v("​ "),a("strong",[t._v("new String()")]),t._v("  将数据转为字符串，返回对象")]),t._v(" "),a("p",[t._v("​ "),a("strong",[t._v("String()")]),t._v("           将数据转为字符串，返回字符串")]),t._v(" "),a("p",[t._v("对比String（）和toString（）")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转字符串")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//要特定的对象， 数值和布尔值")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将任意的数据转字符串")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-转义字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-转义字符"}},[t._v("#")]),t._v(" （1）转义字符  \\")]),t._v(" "),a("p",[t._v("\\ '   将特殊意义的引号转义为普通引号")]),t._v(" "),a("p",[t._v("\\n    将普通的字符n转义为换行符")]),t._v(" "),a("p",[t._v("\\t      将普通的字符t转义为制表符等于tab键的效果")]),t._v(" "),a("h4",{attrs:{id:"_2-api-不会对原来字符串产生影响"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-api-不会对原来字符串产生影响"}},[t._v("#")]),t._v(" （2）API（不会对原来字符串产生影响）")]),t._v(" "),a("p",[a("strong",[t._v("length")]),t._v(" 获取字符串的长度")]),t._v(" "),a("p",[a("strong",[t._v("charAt")]),t._v(" 获取下标对应的字符，也可以使用数组的形式  —字符串[下标]")]),t._v(" "),a("p",[t._v("练习：声明变量保存字符串’JavaScript‘，遍历字符串，统计出a字符出现的次数")]),t._v(" "),a("p",[t._v("练习：统计一个字符串中哪一个出现的字符串出现的次数最多，出现多少次")]),t._v(" "),a("p",[a("strong",[t._v("indexOf()")]),t._v("      查看是否含有某个字符串，返回第一次出现的下标，找不到就返回-1；")]),t._v(" "),a("p",[a("strong",[t._v("lastindexOf()")]),t._v(" 查看是否含有某个字符串，返回最后一次出现的下标，找不到返回-1；")]),t._v(" "),a("p",[t._v("//验证码   防止机器人，恶意访问服务器")]),t._v(" "),a("p",[t._v("**toUpperCase()😗*转大写")]),t._v(" "),a("p",[a("strong",[t._v("toLowerCase():")]),t._v("  转小写")]),t._v(" "),a("p",[a("strong",[t._v("slice(start,end)")]),t._v("  截取字符串，start开始的下标，end结束的下标，不包含end,如果end为空会截取到最后，如果是负数表示倒数，返回截取到的字符串。")]),t._v(" "),a("p",[a("strong",[t._v("substr(start,count)")]),t._v("    按照长度截取字符串,start开始的下标，count截取的长度，如果count为空截取到最后，如果下表是负数表示倒数，返回截取字符串")]),t._v(" "),a("p",[a("strong",[t._v("split(字符)")]),t._v("       将字符串按照指定的字符分割为数组")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//练习：截取文件名称的后缀名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" filename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'web.2104.tao.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最后一个元素")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-math对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-math对象"}},[t._v("#")]),t._v(" 4.Math对象")]),t._v(" "),a("p",[t._v("不需要创建对象，可以直接使用对象下的API")]),t._v(" "),a("p",[t._v("Math.abs()  绝对值")]),t._v(" "),a("p",[t._v("Math.ceil()  向上取整")]),t._v(" "),a("p",[t._v("Math.floor() 向下取整")]),t._v(" "),a("p",[t._v("Math.round() 随机数 ：>=0   <1")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取随机下标 0 ~ 9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0~1  * 10   0 ~ 9.X  向下取整  0 ~ 9  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Math.pow(x，y) 计算x的y次方")]),t._v(" "),a("p",[t._v("Math.max()    获取一组数字的最大值")]),t._v(" "),a("p",[t._v("Math.min()      获取一组数字的最小值")]),t._v(" "),a("p",[t._v("课后任务")]),t._v(" "),a("p",[t._v("(1)复习今天内容，整理思维导图")]),t._v(" "),a("p",[t._v("(2)练习：")]),t._v(" "),a("p",[t._v("将一句英文中每个单词的首字母大写，其余字母小写")]),t._v(" "),a("p",[t._v("hOw aRe yOU   ->  How Are You")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hOw aRe yOU'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将字符串按照空格切割成数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历数组，得到每个单词")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr[i]);")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//截取首字母转大写")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//截取其余的字母转小写")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用转换后替换之前")]),t._v("\n    arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("arr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将数组转为字符串，用空格分隔")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("随机获取a~z之间的4个字母，放入到一个新数组")]),t._v(" "),a("p",[t._v("​    格式 ：['b','c','z','t']")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'j'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'k'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'l'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'m'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'o'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'q'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'u'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//准备一个空数组，用于保存获取到的随机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环4次，每次获取一个随机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//随机下标 0~25")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0~1 * 26      0~25.x    向下取整  0~25")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//arr.length 动态获取数组长度")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(n,arr[n]);")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将每次获取的随机元素放入arr2")]),t._v("\n    arr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//解决不重复的问题，每次获取到随机后，从原数组删除该元素")]),t._v("\n    arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("双色球")]),t._v(" "),a("p",[t._v("红球：在1~33之间随机取6个，不能重复，放入到数组，进行从小到大的排序")]),t._v(" "),a("p",[t._v("蓝球：在1~16之间随机取一个，这个数字可以和之前的红球重复，放入到数组（while）")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("(3)预习js第9天   重点Date对象")]),t._v(" "),a("h2",{attrs:{id:"day08"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day08"}},[t._v("#")]),t._v(" day08")]),t._v(" "),a("h3",{attrs:{id:"_1-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-对象"}},[t._v("#")]),t._v(" 1.对象")]),t._v(" "),a("p",[t._v("（1）检测属性是否存在")]),t._v(" "),a("p",[t._v("对象.属性名 === undefined        true ->  不存在    false -> 不存在")]),t._v(" "),a("p",[t._v("对象.hasOwnProperty（’属性名‘）   true ->  存在    false -> 不存在")]),t._v(" "),a("p",[t._v("’属性名‘  in  对象       true ->  存在    false -> 不存在")]),t._v(" "),a("p",[t._v("练习：创建一个商品对象，包含商品的编号、标题、价格属性；如果颜色属性不存在，则添加该属性；如果价格属性存在，则打八折，最后打印对象。")]),t._v(" "),a("p",[t._v("（2）对象中的方法")]),t._v(" "),a("p",[t._v("var person = {")]),t._v(" "),a("p",[t._v("name: '涛哥',")]),t._v(" "),a("p",[t._v("play: function(){")]),t._v(" "),a("p",[t._v("this 指代调用方法的对象")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("};")]),t._v(" "),a("p",[t._v("person.play()  //调用方法，play中this指向person")]),t._v(" "),a("h3",{attrs:{id:"_2-数据的存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据的存储"}},[t._v("#")]),t._v(" 2.数据的存储")]),t._v(" "),a("h4",{attrs:{id:"_3-原始类型的存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-原始类型的存储"}},[t._v("#")]),t._v(" （3）原始类型的存储")]),t._v(" "),a("p",[t._v("直接存储在栈内存中")]),t._v(" "),a("h4",{attrs:{id:"_4-引用类型的存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-引用类型的存储"}},[t._v("#")]),t._v(" （4）引用类型的存储")]),t._v(" "),a("p",[t._v("堆内存：把对象保存在堆内存中，会产生一个16进制的地址，然后把这个地址保存在栈内存的变量中")]),t._v(" "),a("p",[t._v("将数据存储在堆内存中，同时会自动生成一个地址，然后把这个地址保存到内存（变量）中")]),t._v(" "),a("p",[t._v("eg：")]),t._v(" "),a("p",[t._v("var dong = tao")]),t._v(" "),a("p",[t._v("把对象的地址拷贝赋给另一个变量，两者指向同一个对象")]),t._v(" "),a("p",[t._v("引用类型数据占用内存空间比较大，如果要销毁，没有任何的地址所指向，会自动销毁。直接赋值为null即可销毁")]),t._v(" "),a("p",[t._v("把对象赋值为null，不再指向对象，对象就会自动销毁")]),t._v(" "),a("h3",{attrs:{id:"_3-数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数组"}},[t._v("#")]),t._v(" 3.数组")]),t._v(" "),a("p",[t._v("就是一组数据的集合，每个数据称为元素")]),t._v(" "),a("p",[t._v("（1）数组字面量")]),t._v(" "),a("p",[t._v("[元素1，元素2......]")]),t._v(" "),a("p",[t._v("（2）元素的访问")]),t._v(" "),a("p",[t._v("数组[下标]")]),t._v(" "),a("p",[t._v("下标从0开始的整数，如果下标不存在就返回undefined")]),t._v(" "),a("p",[t._v("（3）数组的下标")]),t._v(" "),a("p",[t._v("数组.length   获取数组元素的个数")]),t._v(" "),a("p",[t._v("数组[数组.length] = 值；可以在数组的末尾添加元素")]),t._v(" "),a("p",[t._v("（4）内置构造函数")]),t._v(" "),a("p",[t._v("new Array(元素1，元素2....)")]),t._v(" "),a("p",[t._v("new Array（3） 创建数组，初始化数组长度为3，可以添加更多个元素")]),t._v(" "),a("p",[t._v("（5）数组的分类")]),t._v(" "),a("p",[t._v("索引数组：以0及以上整数作为下标     >= 0")]),t._v(" "),a("p",[t._v("关联数组：以字符串作为下标，需要单独的添加元素")]),t._v(" "),a("p",[t._v("（6）数组的遍历")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("  数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n k  代表下标\n 数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  下标对应的元素\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n循环\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" 数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   i  代表下标\n   数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  下标对应的元素\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("（7）API")]),t._v(" "),a("p",[t._v("API：应用程序编程接口，JS下提供好的函数或者方法")]),t._v(" "),a("p",[t._v("如何区分两个方法（API）是不是同一个：查看调用这个方法的对象，是不是相同的数据类型")]),t._v(" "),a("p",[t._v("toString()  将数组转为字符串")]),t._v(" "),a("p",[t._v("join( str )   将数组转为字符串，可以设置字符串之间的分割符")]),t._v(" "),a("h2",{attrs:{id:"day09"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day09"}},[t._v("#")]),t._v(" day09")]),t._v(" "),a("h3",{attrs:{id:"_2-date对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-date对象"}},[t._v("#")]),t._v(" 2.Date对象")]),t._v(" "),a("p",[t._v("用于日期时间的存储和计算（倒计时，时钟效果.....)")]),t._v(" "),a("p",[t._v("（1）创建")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021/5/18 10:27:30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2021-05-18  T02:27:30.000Z //T02:时区  往前推8小时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//月份0~11  1月~12月")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前操作系统时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1608336000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//距离计算机元年的毫秒数,会产生一个具体的日期时间")]),t._v("\n")])])]),a("p",[t._v("距离计算机元年（0时区1970-1-1   0：0：0）的毫秒数  (cals)")]),t._v(" "),a("p",[t._v("2021-1-1  0:0:0")]),t._v(" "),a("p",[t._v("51 "),a("em",[t._v("365")]),t._v(" 24 "),a("em",[t._v("60")]),t._v(" 60 * 1000ms")]),t._v(" "),a("p",[t._v("（2）获取存储的日期时间")]),t._v(" "),a("p",[t._v("getFullYear/getMonth/getDate")]),t._v(" "),a("p",[t._v("​ 获取的月份 0~11  对应1~12月")]),t._v(" "),a("p",[t._v("getHours/getMinutes/getSeconds/getMilliseconds")]),t._v(" "),a("p",[t._v("getDay 获取星期 0~6  对应星期日~星期六")]),t._v(" "),a("p",[t._v("getTime 获取距离计算机元年的毫秒数")]),t._v(" "),a("p",[t._v("练习：创建Date对象，保存当前操作系统的时间，获取日期时间，打印以下格式      今天是XXXX年XX月XX日XX时XX分XX秒 星期二")]),t._v(" "),a("p",[t._v("（3）转为本地字符串格式")]),t._v(" "),a("p",[t._v("存在兼容性问题，常用于调试")]),t._v(" "),a("p",[t._v("toLocaleString()   日期+时间")]),t._v(" "),a("p",[t._v("toLocaleDateString()   日期")]),t._v(" "),a("p",[t._v("toLocaleDateString()    时间")]),t._v(" "),a("p",[t._v("（4）设置日期时间")]),t._v(" "),a("p",[t._v("修改Date对象中存储的日期时间")]),t._v(" "),a("p",[t._v("setFullYear/setMonth/setDate")]),t._v(" "),a("p",[t._v("月份1~12  对应的值0~11")]),t._v(" "),a("p",[t._v("setHuors/setMinutes/setSeconds/setMilliseconds")]),t._v(" "),a("p",[t._v("setTime  设置距离计算机元年的毫秒数，产生一个具体的日期")]),t._v(" "),a("p",[t._v("（5）拷贝Data对象")]),t._v(" "),a("p",[t._v("var d1 = new Data();")]),t._v(" "),a("p",[t._v("new d2 = new Data(d1);//拷贝d1对象")]),t._v(" "),a("p",[t._v("练习：创建Data对象，保存’2020/5/20‘，作为入职时间，拷贝这个入职时间的对象作为到期时间，设置合同期为三年。分别打印两个对象的本地字符串格式。")]),t._v(" "),a("h3",{attrs:{id:"_3-number对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-number对象"}},[t._v("#")]),t._v(" 3.Number对象")]),t._v(" "),a("p",[t._v("new Number()  将数据转为数值，返回对象")]),t._v(" "),a("p",[t._v("Number（）     将数据转为数值，返回数值")]),t._v(" "),a("p",[t._v("toFixed（n）     保留小数点后n位")]),t._v(" "),a("p",[t._v("toString（n）     将数值转为字符串，可以设置显示的进制")]),t._v(" "),a("h3",{attrs:{id:"_4-boolean对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-boolean对象"}},[t._v("#")]),t._v(" 4.boolean对象")]),t._v(" "),a("p",[t._v("new Boolean（）   将数据转为布尔型，返回对象")]),t._v(" "),a("p",[t._v("Boolean（）            将数据转为布尔型，返回布尔型")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("！！：隐式转换为布尔型\neg：  ！！"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-错误处理"}},[t._v("#")]),t._v(" 5.错误处理")]),t._v(" "),a("p",[t._v("（1）常见的错误")]),t._v(" "),a("p",[t._v("语法错误（SyntaxError）：不符合语法规范，例如出现中文的符号，缺少半块括号，运行之前产生的错误")]),t._v(" "),a("p",[t._v("运行过程中产生的错误：")]),t._v(" "),a("p",[t._v("引用错误（ReferenceError）：使用了变量未声明")]),t._v(" "),a("p",[t._v("类型错误（TypeError）：把一个非函数当作非函数当作函数调用")]),t._v(" "),a("p",[t._v("范围错误（RangeRrror）：数据的使用超出了Js的规定范围")]),t._v(" "),a("p",[t._v("自定义错误：程序员自己指定的错误：throw 错误")]),t._v(" "),a("p",[t._v("（2）错误处理")]),t._v(" "),a("p",[t._v("在运行过程中产生的错误，不再影响后续代码的执行")]),t._v(" "),a("p",[t._v("try{")]),t._v(" "),a("p",[t._v("​ 尝试执行，可能产生错误，一旦产生会被catch捕获")]),t._v(" "),a("p",[t._v("}catch（err）{")]),t._v(" "),a("p",[t._v("​ 将错误信息放入err中，不再影响后续代码执行")]),t._v(" "),a("p",[t._v("​ 进行错误处理")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("h3",{attrs:{id:"_6-es6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-es6"}},[t._v("#")]),t._v(" 6.ES6")]),t._v(" "),a("p",[t._v("ECMA -> ECMAScript ->  ES")]),t._v(" "),a("p",[t._v("​               标准规范")]),t._v(" "),a("p",[t._v("ES6 js的第六套标准规范")]),t._v(" "),a("p",[t._v("课后作业")]),t._v(" "),a("p",[t._v("创建函数，传递任意一个日期，返回这一天是一年中的第几天")]),t._v(" "),a("p",[t._v("例如  getDays（2021，5，18）")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是闰年是29天，否则28天")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" year"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" year"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" year"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明变量，用于记录天数，先把当前月天数加入进去")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" day"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每个月的天数不同")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历当前月份")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回总的天数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算当前日期距离一年的一月一日相差的毫秒数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("month"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" d2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相差的值换算为天")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-块级作用域"}},[t._v("#")]),t._v(" （1）块级作用域")]),t._v(" "),a("p",[t._v("为了解决全局污染的问题")]),t._v(" "),a("p",[t._v("let a = 1；")]),t._v(" "),a("p",[t._v("let声明的变量"),a("strong",[t._v("不存在提升")]),t._v("，在"),a("strong",[t._v("同一个作用域")]),t._v("下，"),a("strong",[t._v("不允许重复声明")]),t._v("同一个变量")]),t._v(" "),a("p",[t._v("大括号{}之间的语句块就是一个块级作用域，例如：if、else、while、do while、for....在块级作用域下，let和const声明的都是局部的，无法被访问到。")]),t._v(" "),a("div",{staticClass:"language-test extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var let const三个区别\nvar 声明的变量存在提升，在同一个作用域下可以重复声明同一个变量\nlet 声明的变量不存在提升，在同一个作用域下不允许重复声明同一个变量，存在块级作用域，即使在全局作用域下let声明的变量也不是全局的\nconst 声明的时候必须赋值，不允许重新赋值，存在块级作用域，即使在全局作用域下const声明的常量也不是全局的\n")])])]),a("p",[t._v("练习：计算1~100之间所有整数的和，要求使用let声明变量")]),t._v(" "),a("h4",{attrs:{id:"_2-参数增强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-参数增强"}},[t._v("#")]),t._v(" （2）参数增强")]),t._v(" "),a("p",[t._v("可以给数的参数设置默认值")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//c = c||0;  //es6之前的默认值设置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//没有出现的实参就会使用默认值")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-箭头函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-箭头函数"}},[t._v("#")]),t._v(" （3）箭头函数")]),t._v(" "),a("p",[t._v("()=>{ }")]),t._v(" "),a("p",[t._v("作用：简化了匿名函数的写法，不等价于匿名函数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从小到大的排序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果箭头函数里的函数体中只有一行函数，并且为return形式")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从小到大的排序")]),t._v("\n")])])]),a("p",[t._v("练习：使用函数表达式创建函数（用匿名函数）将之前的匿名函数使用箭头函数代替，计算任意三个数字的平均值并返回结果。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("（4）模板字符串")]),t._v(" "),a("p",[t._v("解决了字符串的拼接问题")]),t._v(" "),a("p",[t._v("、模板字符串 ${JS表达式}")]),t._v(" "),a("p",[t._v("练习：声明变量保存一条员工的数据，格式为对象，包含的属性有编号，姓名，性别（1/0），工资；最后打印出以下格式")]),t._v(" "),a("p",[t._v("编号：X")]),t._v(" "),a("p",[t._v("姓名：XX")]),t._v(" "),a("p",[t._v("性别：男／女")]),t._v(" "),a("p",[t._v("工资：XXXX.00元")]),t._v(" "),a("h2",{attrs:{id:"day10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day10"}},[t._v("#")]),t._v(" day10")]),t._v(" "),a("p",[t._v("Node.js是运行在服务器端的js解释器，基于谷歌的v8引擎")]),t._v(" "),a("p",[t._v("（1）对比JS")]),t._v(" "),a("p",[t._v("JS运行在客户端浏览器，存在多种JS解释器，存在代码兼容性问题；")]),t._v(" "),a("p",[t._v("Node.js只有V8引擎一种解释器，不存在代码兼容性问题")]),t._v(" "),a("p",[t._v("JS和Node.js都有共同的ES（内置）对象和自定义对象，不同的宿主对象")]),t._v(" "),a("p",[t._v("JS用于开发浏览器端的交互效果，Node.js用于服务器端开发，例如数据库的访问，其他服务器的调用.....")]),t._v(" "),a("p",[t._v("（2）网址")]),t._v(" "),a("p",[t._v("www.nodejs.org  官网")]),t._v(" "),a("p",[t._v("www.nodejs.cn    中文镜像")]),t._v(" "),a("p",[t._v("（3）使用node.js")]),t._v(" "),a("p",[t._v("脚本模式")]),t._v(" "),a("p",[t._v("node  拖拽脚本文件   回车")]),t._v(" "),a("p",[t._v("交互模式")]),t._v(" "),a("p",[t._v("进入：node  回车  进入交互模式")]),t._v(" "),a("p",[t._v("退出：两次CTRL+C      或者    一次CTRL+D")]),t._v(" "),a("p",[t._v("（4）特点")]),t._v(" "),a("p",[t._v("Node.js属于"),a("strong",[t._v("单线程运行逻辑")]),t._v("，支持数万个并发连接，适合做"),a("strong",[t._v("基于社交网络的大规模web应用")]),t._v("，不适合做CPU密集型的操作。")]),t._v(" "),a("h3",{attrs:{id:"_2-全局对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-全局对象"}},[t._v("#")]),t._v(" 2.全局对象")]),t._v(" "),a("p",[t._v("（1）global")]),t._v(" "),a("p",[t._v("检测一个变量或者函数是否为全局的")]),t._v(" "),a("p",[t._v("交互模式属于全局作用域，创建的函数和声明的变量是全局的")]),t._v(" "),a("p",[t._v("每个脚本文件都是在一个作用域下，里边的函数和变量都是局部的，不存在全局污染")]),t._v(" "),a("p",[t._v("JS下的global叫做window")]),t._v(" "),a("p",[t._v("练习：编写脚本文件03_global.js,在脚本文件下声明变量、创建函数，然后通过global检测是否为全局")]),t._v(" "),a("p",[t._v("练习：创建文件04_window.js和04.html，把js嵌入html，声明变量、创建函数，然后通过window检测是否为全局")]),t._v(" "),a("p",[t._v("（2）console")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//日志")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//消息")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//警告")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误")]),t._v("\n开始计时和结束计时的参数要保持一致\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//开始计时")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeEnd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结束计时")]),t._v("\n")])])]),a("p",[t._v("练习：分别查看for、while、do—while三种循环分别循环100000次的耗时")]),t._v(" "),a("p",[t._v("（3）process")]),t._v(" "),a("p",[t._v("进程：计算机上的软件运行都是代表相应的进程")]),t._v(" "),a("p",[t._v("API")]),t._v(" "),a("p",[t._v("process.arch   :查看当前CPU的架构")]),t._v(" "),a("p",[t._v("process.platform :查看当前的操作系统")]),t._v(" "),a("p",[t._v("process.version :查看当前Node.js的版本号")]),t._v(" "),a("p",[t._v("process.pid：查看当前node的进程编号")]),t._v(" "),a("p",[t._v("process.kill（进程编号）：结束指定编号的进程")]),t._v(" "),a("p",[t._v("（4）buffer")]),t._v(" "),a("p",[t._v("缓冲器：在内存中临时存储数据的区域，常用于保存网络传输时的资源")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" buf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'好的'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置大小为6个字节  一个汉字占三个字节")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//底层是二进制编码，显示的是16进制的编码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将buffer转为字符串")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将Buffer数据转为字符串")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-定时器"}},[t._v("#")]),t._v(" 3.定时器")]),t._v(" "),a("p",[t._v("一次性定时器：")]),t._v(" "),a("p",[t._v("开启：")]),t._v(" "),a("p",[t._v("var timer = setTimeout(回调函数，间隔时间)")]),t._v(" "),a("p",[t._v("当间隔时间到了，调用一次回调函数")]),t._v(" "),a("p",[t._v("清除：")]),t._v(" "),a("p",[t._v("cleanTimeOut（timer）")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CASUS%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210519194441220.png",alt:"image-20210519194441220"}})]),t._v(" "),a("p",[t._v("主程序（执行）")]),t._v(" "),a("p",[t._v("定时器（回调函数，时间（ms））")]),t._v(" "),a("p",[t._v("回调函数在事件队列里执行")]),t._v(" "),a("p",[t._v("定时器的执行：")]),t._v(" "),a("p",[t._v("主程序执行时回调函数放入事件队列（由一组回调函数组成）等待时间过后执行回调函数")]),t._v(" "),a("h3",{attrs:{id:"_4-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-模块"}},[t._v("#")]),t._v(" 4.模块")]),t._v(" "),a("p",[t._v("是一个独立的功能体，模块可以被其他的模块引入，也可以引入其他的模块")]),t._v(" "),a("p",[t._v("require（） 用于引入其他的模块")]),t._v(" "),a("p",[t._v("module.exports  是一个空对象，用于存放导出的内容")])])}),[],!1,null,null,null);s.default=r.exports}}]);